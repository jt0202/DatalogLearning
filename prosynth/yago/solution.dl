.type V

.decl Rule(n: number)
.input Rule

.decl hasgeonamesid(v0: V, v1: V)
.input hasgeonamesid

.decl haswonprize(v0: V, v1: V)
.input haswonprize

.decl ismarriedto(v0: V, v1: V)
.input ismarriedto

.decl participatedin(v0: V, v1: V)
.input participatedin

.decl actedin(v0: V, v1: V)
.input actedin

.decl wasbornin(v0: V, v1: V)
.input wasbornin

.decl islocatedin(v0: V, v1: V)
.input islocatedin

.decl directed(v0: V, v1: V)
.input directed

.decl haschild(v0: V, v1: V)
.input haschild

.decl diedin(v0: V, v1: V)
.input diedin

.decl created(v0: V, v1: V)
.input created

.decl Iinfluences(v0: V, v1: V)
.input Iinfluences

.decl inv_0(v0: V, v1: V)
.output inv_0

.decl influences(v0: V, v1: V)
.output influences

influences(v0, v1) :- ismarriedto(v0, v1), Rule(30).
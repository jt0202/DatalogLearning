Terminals unused in grammar

    "convert int to unsigned"
    "convert int to float"
    "convert unsigned to int"
    "convert unsigned to float"
    "convert float to int"
    "convert float to unsigned"
    "::"


Grammar

    0 $accept: program "end of file"

    1 program: unit

    2 unit: %empty
    3     | unit directive_head
    4     | unit rule
    5     | unit fact
    6     | unit component_decl
    7     | unit component_init
    8     | unit pragma
    9     | unit type_decl
   10     | unit functor_decl
   11     | unit relation_decl

   12 qualified_name: "identifier"
   13               | qualified_name "." "identifier"

   14 type_decl: "type declaration" "identifier" "<:" qualified_name
   15          | "type declaration" "identifier" "=" union_type_list
   16          | "type declaration" "identifier" "=" record_type_list
   17          | "type declaration" "identifier" "=" adt_branch_list
   18          | "numeric type declaration" "identifier"
   19          | "symbolic type declaration" "identifier"
   20          | "type declaration" "identifier"

   21 record_type_list: "[" "]"
   22                 | "[" non_empty_attributes "]"

   23 union_type_list: qualified_name
   24                | union_type_list "|" qualified_name

   25 adt_branch_list: adt_branch
   26                | adt_branch_list "|" adt_branch

   27 adt_branch: "identifier" "{" "}"
   28           | "identifier" "{" non_empty_attributes "}"

   29 relation_decl: "relation declaration" relation_names attributes_list relation_tags dependency_list

   30 relation_names: "identifier"
   31               | relation_names "," "identifier"

   32 attributes_list: "(" ")"
   33                | "(" non_empty_attributes ")"

   34 non_empty_attributes: attribute
   35                     | non_empty_attributes "," attribute

   36 attribute: "identifier" ":" qualified_name

   37 relation_tags: %empty
   38              | relation_tags "relation qualifier overidable"
   39              | relation_tags "relation qualifier inline"
   40              | relation_tags "relation qualifier no_inline"
   41              | relation_tags "relation qualifier magic"
   42              | relation_tags "relation qualifier no_magic"
   43              | relation_tags "BRIE datastructure qualifier"
   44              | relation_tags "BTREE datastructure qualifier"
   45              | relation_tags "BTREE_DELETE datastructure qualifier"
   46              | relation_tags "equivalence relation qualifier"
   47              | relation_tags "relation qualifier output"
   48              | relation_tags "relation qualifier input"
   49              | relation_tags "relation qualifier printsize"

   50 non_empty_attribute_names: "identifier"
   51                          | non_empty_attribute_names "," "identifier"

   52 dependency: "identifier"
   53           | "(" non_empty_attribute_names ")"

   54 dependency_list_aux: dependency
   55                    | dependency_list_aux "," dependency

   56 dependency_list: %empty
   57                | "choice-domain" dependency_list_aux

   58 fact: atom "."

   59 rule: rule_def
   60     | rule_def query_plan
   61     | atom "<=" atom ":-" body "."
   62     | atom "<=" atom ":-" body "." query_plan

   63 rule_def: head ":-" body "."

   64 head: atom
   65     | head "," atom

   66 body: disjunction

   67 disjunction: conjunction
   68            | disjunction ";" conjunction

   69 conjunction: term
   70            | conjunction "," term

   71 term: atom
   72     | constraint
   73     | "(" disjunction ")"
   74     | "!" term

   75 atom: qualified_name "(" arg_list ")"

   76 constraint: arg "<" arg
   77           | arg ">" arg
   78           | arg "<=" arg
   79           | arg ">=" arg
   80           | arg "=" arg
   81           | arg "!=" arg
   82           | "match predicate" "(" arg "," arg ")"
   83           | "checks whether substring is contained in a string" "(" arg "," arg ")"
   84           | "true literal constraint"
   85           | "false literal constraint"

   86 arg_list: %empty
   87         | non_empty_arg_list

   88 non_empty_arg_list: arg
   89                   | non_empty_arg_list "," arg

   90 arg: "symbol"
   91    | "float"
   92    | "unsigned number"
   93    | "number"
   94    | "_"
   95    | "$"
   96    | "auto-increment functor" "(" ")"
   97    | "identifier"
   98    | "nil reference"
   99    | "[" arg_list "]"
  100    | "$" qualified_name "(" arg_list ")"
  101    | "(" arg ")"
  102    | "type cast" "(" arg "," qualified_name ")"
  103    | "@" "identifier" "(" arg_list ")"
  104    | functor_built_in "(" arg_list ")"
  105    | aggregate_func "(" arg "," non_empty_arg_list ")"
  106    | "-" arg
  107    | "bnot" arg
  108    | "lnot" arg
  109    | arg "+" arg
  110    | arg "-" arg
  111    | arg "*" arg
  112    | arg "/" arg
  113    | arg "%" arg
  114    | arg "^" arg
  115    | arg "land" arg
  116    | arg "lor" arg
  117    | arg "lxor" arg
  118    | arg "band" arg
  119    | arg "bor" arg
  120    | arg "bxor" arg
  121    | arg "bshl" arg
  122    | arg "bshr" arg
  123    | arg "bshru" arg
  124    | aggregate_func arg_list ":" aggregate_body

  125 functor_built_in: "concatenation of strings"
  126                 | "ordinal number of a string"
  127                 | "range"
  128                 | "length of a string"
  129                 | "sub-string of a string"
  130                 | "convert to float"
  131                 | "convert to signed integer"
  132                 | "convert to string"
  133                 | "convert to unsigned integer"

  134 aggregate_func: "count aggregator"
  135               | "max aggregator"
  136               | "mean aggregator"
  137               | "min aggregator"
  138               | "sum aggregator"

  139 aggregate_body: "{" body "}"
  140               | atom

  141 query_plan: "plan keyword" query_plan_list

  142 query_plan_list: "number" ":" plan_order
  143                | query_plan_list "," "number" ":" plan_order

  144 plan_order: "(" ")"
  145           | "(" non_empty_plan_order_list ")"

  146 non_empty_plan_order_list: "number"
  147                          | non_empty_plan_order_list "," "number"

  148 component_decl: component_head "{" component_body "}"

  149 component_head: "component declaration" component_type
  150               | component_head ":" component_type
  151               | component_head "," component_type

  152 component_type: "identifier" component_type_params

  153 component_type_params: %empty
  154                      | "<" component_param_list ">"

  155 component_param_list: "identifier"
  156                     | component_param_list "," "identifier"

  157 component_body: %empty
  158               | component_body directive_head
  159               | component_body rule
  160               | component_body fact
  161               | component_body "override rules of super-component" "identifier"
  162               | component_body component_init
  163               | component_body component_decl
  164               | component_body type_decl
  165               | component_body relation_decl

  166 component_init: "component instantiation" "identifier" "=" component_type

  167 functor_decl: "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" qualified_name
  168             | "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" qualified_name "stateful functor"

  169 functor_arg_type_list: %empty
  170                      | non_empty_functor_arg_type_list

  171 non_empty_functor_arg_type_list: functor_attribute
  172                                | non_empty_functor_arg_type_list "," functor_attribute

  173 functor_attribute: qualified_name
  174                  | "identifier" ":" qualified_name

  175 pragma: "pragma directive" "symbol" "symbol"
  176       | "pragma directive" "symbol"

  177 directive_head: directive_head_decl directive_list

  178 directive_head_decl: "input directives declaration"
  179                    | "output directives declaration"
  180                    | "printsize directives declaration"
  181                    | "limitsize directives declaration"

  182 directive_list: relation_directive_list
  183               | relation_directive_list "(" ")"
  184               | relation_directive_list "(" non_empty_key_value_pairs ")"

  185 relation_directive_list: qualified_name
  186                        | relation_directive_list "," qualified_name

  187 non_empty_key_value_pairs: "identifier" "=" kvp_value
  188                          | non_empty_key_value_pairs "," "identifier" "=" kvp_value

  189 kvp_value: "symbol"
  190          | "identifier"
  191          | "number"
  192          | "true literal constraint"
  193          | "false literal constraint"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "symbol" <std::string> (258) 90 175 176 189
    "identifier" <std::string> (259) 12 13 14 15 16 17 18 19 20 27 28 30 31 36 50 51 52 97 103 152 155 156 161 166 167 168 174 187 188 190
    "number" <std::string> (260) 93 142 143 146 147 191
    "unsigned number" <std::string> (261) 92
    "float" <std::string> (262) 91
    "auto-increment functor" (263) 96
    "pragma directive" (264) 175 176
    "relation qualifier output" (265) 47
    "relation qualifier input" (266) 48
    "relation qualifier printsize" (267) 49
    "BRIE datastructure qualifier" (268) 43
    "BTREE datastructure qualifier" (269) 44
    "BTREE_DELETE datastructure qualifier" (270) 45
    "equivalence relation qualifier" (271) 46
    "relation qualifier overidable" (272) 38
    "relation qualifier inline" (273) 39
    "relation qualifier no_inline" (274) 40
    "relation qualifier magic" (275) 41
    "relation qualifier no_magic" (276) 42
    "match predicate" (277) 82
    "checks whether substring is contained in a string" (278) 83
    "stateful functor" (279) 168
    "concatenation of strings" (280) 125
    "ordinal number of a string" (281) 126
    "range" (282) 127
    "length of a string" (283) 128
    "sub-string of a string" (284) 129
    "mean aggregator" (285) 136
    "min aggregator" (286) 137
    "max aggregator" (287) 135
    "count aggregator" (288) 134
    "sum aggregator" (289) 138
    "true literal constraint" (290) 84 192
    "false literal constraint" (291) 85 193
    "plan keyword" (292) 141
    "choice-domain" (293) 57
    ":-" (294) 61 62 63
    "relation declaration" (295) 29
    "functor declaration" (296) 167 168
    "input directives declaration" (297) 178
    "output directives declaration" (298) 179
    "printsize directives declaration" (299) 180
    "limitsize directives declaration" (300) 181
    "override rules of super-component" (301) 161
    "type declaration" (302) 14 15 16 17 20
    "component declaration" (303) 149
    "component instantiation" (304) 166
    "numeric type declaration" (305) 18
    "symbolic type declaration" (306) 19
    "convert to float" (307) 130
    "convert to signed integer" (308) 131
    "convert to string" (309) 132
    "convert to unsigned integer" (310) 133
    "convert int to unsigned" (311)
    "convert int to float" (312)
    "convert unsigned to int" (313)
    "convert unsigned to float" (314)
    "convert float to int" (315)
    "convert float to unsigned" (316)
    "type cast" (317) 102
    "@" (318) 103
    "nil reference" (319) 98
    "|" (320) 24 26
    "[" (321) 21 22 99
    "]" (322) 21 22 99
    "_" (323) 94
    "$" (324) 95 100
    "+" (325) 109
    "-" (326) 106 110
    "!" (327) 74
    "(" (328) 32 33 53 73 75 82 83 96 100 101 102 103 104 105 144 145 167 168 183 184
    ")" (329) 32 33 53 73 75 82 83 96 100 101 102 103 104 105 144 145 167 168 183 184
    "," (330) 31 35 51 55 65 70 82 83 89 102 105 143 147 151 156 172 186 188
    ":" (331) 36 124 142 143 150 167 168 174
    "::" (332)
    ";" (333) 68
    "." (334) 13 58 61 62 63
    "=" (335) 15 16 17 80 166 187 188
    "*" (336) 111
    "/" (337) 112
    "^" (338) 114
    "%" (339) 113
    "{" (340) 27 28 139 148
    "}" (341) 27 28 139 148
    "<:" (342) 14
    "<" (343) 76 154
    ">" (344) 77 154
    "<=" (345) 61 62 78
    ">=" (346) 79
    "!=" (347) 81
    "band" (348) 118
    "bor" (349) 119
    "bxor" (350) 120
    "bshl" (351) 121
    "bshr" (352) 122
    "bshru" (353) 123
    "bnot" (354) 107
    "land" (355) 115
    "lor" (356) 116
    "lxor" (357) 117
    "lnot" (358) 108
    NEG (359)


Nonterminals, with rules where they appear

    $accept (105)
        on left: 0
    program (106)
        on left: 1
        on right: 0
    unit (107)
        on left: 2 3 4 5 6 7 8 9 10 11
        on right: 1 3 4 5 6 7 8 9 10 11
    qualified_name <Mov<ast::QualifiedName>> (108)
        on left: 12 13
        on right: 13 14 23 24 36 75 100 102 167 168 173 174 185 186
    type_decl <Mov<Own<ast::Type>>> (109)
        on left: 14 15 16 17 18 19 20
        on right: 9 164
    record_type_list <Mov<VecOwn<ast::Attribute>>> (110)
        on left: 21 22
        on right: 16
    union_type_list <Mov<std::vector<ast::QualifiedName>>> (111)
        on left: 23 24
        on right: 15 24
    adt_branch_list <Mov<VecOwn<ast::BranchType>>> (112)
        on left: 25 26
        on right: 17 26
    adt_branch <Mov<Own<ast::BranchType>>> (113)
        on left: 27 28
        on right: 25 26
    relation_decl <Mov<VecOwn<ast::Relation>>> (114)
        on left: 29
        on right: 11 165
    relation_names <Mov<VecOwn<ast::Relation>>> (115)
        on left: 30 31
        on right: 29 31
    attributes_list <Mov<VecOwn<ast::Attribute>>> (116)
        on left: 32 33
        on right: 29
    non_empty_attributes <Mov<VecOwn<ast::Attribute>>> (117)
        on left: 34 35
        on right: 22 28 33 35
    attribute <Mov<Own<ast::Attribute>>> (118)
        on left: 36
        on right: 34 35
    relation_tags <std::set<RelationTag>> (119)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 29 38 39 40 41 42 43 44 45 46 47 48 49
    non_empty_attribute_names <Mov<std::vector<std::string>>> (120)
        on left: 50 51
        on right: 51 53
    dependency <Mov<Own<ast::FunctionalConstraint>>> (121)
        on left: 52 53
        on right: 54 55
    dependency_list_aux <Mov<VecOwn<ast::FunctionalConstraint>>> (122)
        on left: 54 55
        on right: 55 57
    dependency_list <Mov<VecOwn<ast::FunctionalConstraint>>> (123)
        on left: 56 57
        on right: 29
    fact <Mov<Own<ast::Clause>>> (124)
        on left: 58
        on right: 5 160
    rule <Mov<VecOwn<ast::Clause>>> (125)
        on left: 59 60 61 62
        on right: 4 159
    rule_def <Mov<VecOwn<ast::Clause>>> (126)
        on left: 63
        on right: 59 60
    head <Mov<VecOwn<ast::Atom>>> (127)
        on left: 64 65
        on right: 63 65
    body <Mov<RuleBody>> (128)
        on left: 66
        on right: 61 62 63 139
    disjunction <Mov<RuleBody>> (129)
        on left: 67 68
        on right: 66 68 73
    conjunction <Mov<RuleBody>> (130)
        on left: 69 70
        on right: 67 68 70
    term <Mov<RuleBody>> (131)
        on left: 71 72 73 74
        on right: 69 70 74
    atom <Mov<Own<ast::Atom>>> (132)
        on left: 75
        on right: 58 61 62 64 65 71 140
    constraint <Mov<Own<ast::Constraint>>> (133)
        on left: 76 77 78 79 80 81 82 83 84 85
        on right: 72
    arg_list <Mov<VecOwn<ast::Argument>>> (134)
        on left: 86 87
        on right: 75 99 100 103 104 124
    non_empty_arg_list <Mov<VecOwn<ast::Argument>>> (135)
        on left: 88 89
        on right: 87 89 105
    arg <Mov<Own<ast::Argument>>> (136)
        on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124
        on right: 76 77 78 79 80 81 82 83 88 89 101 102 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123
    functor_built_in <Mov<std::string>> (137)
        on left: 125 126 127 128 129 130 131 132 133
        on right: 104
    aggregate_func <AggregateOp> (138)
        on left: 134 135 136 137 138
        on right: 105 124
    aggregate_body <Mov<RuleBody>> (139)
        on left: 139 140
        on right: 124
    query_plan <Mov<Own<ast::ExecutionPlan>>> (140)
        on left: 141
        on right: 60 62
    query_plan_list <Mov<Own<ast::ExecutionPlan>>> (141)
        on left: 142 143
        on right: 141 143
    plan_order <Mov<Own<ast::ExecutionOrder>>> (142)
        on left: 144 145
        on right: 142 143
    non_empty_plan_order_list <Mov<ast::ExecutionOrder::ExecOrder>> (143)
        on left: 146 147
        on right: 145 147
    component_decl <Mov<Own<ast::Component>>> (144)
        on left: 148
        on right: 6 163
    component_head <Mov<Own<ast::Component>>> (145)
        on left: 149 150 151
        on right: 148 150 151
    component_type <Mov<Own<ast::ComponentType>>> (146)
        on left: 152
        on right: 149 150 151 166
    component_type_params <Mov<std::vector<ast::QualifiedName>>> (147)
        on left: 153 154
        on right: 152
    component_param_list <Mov<std::vector<ast::QualifiedName>>> (148)
        on left: 155 156
        on right: 154 156
    component_body <Mov<Own<ast::Component>>> (149)
        on left: 157 158 159 160 161 162 163 164 165
        on right: 148 158 159 160 161 162 163 164 165
    component_init <Mov<Own<ast::ComponentInit>>> (150)
        on left: 166
        on right: 7 162
    functor_decl <Mov<Own<ast::FunctorDeclaration>>> (151)
        on left: 167 168
        on right: 10
    functor_arg_type_list <Mov<VecOwn<ast::Attribute>>> (152)
        on left: 169 170
        on right: 167 168
    non_empty_functor_arg_type_list <Mov<VecOwn<ast::Attribute>>> (153)
        on left: 171 172
        on right: 170 172
    functor_attribute <Mov<Own<ast::Attribute>>> (154)
        on left: 173 174
        on right: 171 172
    pragma <Mov<Own<ast::Pragma>>> (155)
        on left: 175 176
        on right: 8
    directive_head <Mov<VecOwn<ast::Directive>>> (156)
        on left: 177
        on right: 3 158
    directive_head_decl <ast::DirectiveType> (157)
        on left: 178 179 180 181
        on right: 177
    directive_list <Mov<VecOwn<ast::Directive>>> (158)
        on left: 182 183 184
        on right: 177
    relation_directive_list <Mov<VecOwn<ast::Directive>>> (159)
        on left: 185 186
        on right: 182 183 184 186
    non_empty_key_value_pairs <Mov<std::vector<std::pair
            <std::string, std::string>>>> (160)
        on left: 187 188
        on right: 184 188
    kvp_value <Mov<std::string>> (161)
        on left: 189 190 191 192 193
        on right: 187 188


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 2 (unit)

    program  go to state 1
    unit     go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: unit .
    3 unit: unit . directive_head
    4     | unit . rule
    5     | unit . fact
    6     | unit . component_decl
    7     | unit . component_init
    8     | unit . pragma
    9     | unit . type_decl
   10     | unit . functor_decl
   11     | unit . relation_decl

    "identifier"                        shift, and go to state 4
    "pragma directive"                  shift, and go to state 5
    "relation declaration"              shift, and go to state 6
    "functor declaration"               shift, and go to state 7
    "input directives declaration"      shift, and go to state 8
    "output directives declaration"     shift, and go to state 9
    "printsize directives declaration"  shift, and go to state 10
    "limitsize directives declaration"  shift, and go to state 11
    "type declaration"                  shift, and go to state 12
    "component declaration"             shift, and go to state 13
    "component instantiation"           shift, and go to state 14
    "numeric type declaration"          shift, and go to state 15
    "symbolic type declaration"         shift, and go to state 16

    $default  reduce using rule 1 (program)

    qualified_name       go to state 17
    type_decl            go to state 18
    relation_decl        go to state 19
    fact                 go to state 20
    rule                 go to state 21
    rule_def             go to state 22
    head                 go to state 23
    atom                 go to state 24
    component_decl       go to state 25
    component_head       go to state 26
    component_init       go to state 27
    functor_decl         go to state 28
    pragma               go to state 29
    directive_head       go to state 30
    directive_head_decl  go to state 31


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   12 qualified_name: "identifier" .

    $default  reduce using rule 12 (qualified_name)


State 5

  175 pragma: "pragma directive" . "symbol" "symbol"
  176       | "pragma directive" . "symbol"

    "symbol"  shift, and go to state 32


State 6

   29 relation_decl: "relation declaration" . relation_names attributes_list relation_tags dependency_list

    "identifier"  shift, and go to state 33

    relation_names  go to state 34


State 7

  167 functor_decl: "functor declaration" . "identifier" "(" functor_arg_type_list ")" ":" qualified_name
  168             | "functor declaration" . "identifier" "(" functor_arg_type_list ")" ":" qualified_name "stateful functor"

    "identifier"  shift, and go to state 35


State 8

  178 directive_head_decl: "input directives declaration" .

    $default  reduce using rule 178 (directive_head_decl)


State 9

  179 directive_head_decl: "output directives declaration" .

    $default  reduce using rule 179 (directive_head_decl)


State 10

  180 directive_head_decl: "printsize directives declaration" .

    $default  reduce using rule 180 (directive_head_decl)


State 11

  181 directive_head_decl: "limitsize directives declaration" .

    $default  reduce using rule 181 (directive_head_decl)


State 12

   14 type_decl: "type declaration" . "identifier" "<:" qualified_name
   15          | "type declaration" . "identifier" "=" union_type_list
   16          | "type declaration" . "identifier" "=" record_type_list
   17          | "type declaration" . "identifier" "=" adt_branch_list
   20          | "type declaration" . "identifier"

    "identifier"  shift, and go to state 36


State 13

  149 component_head: "component declaration" . component_type

    "identifier"  shift, and go to state 37

    component_type  go to state 38


State 14

  166 component_init: "component instantiation" . "identifier" "=" component_type

    "identifier"  shift, and go to state 39


State 15

   18 type_decl: "numeric type declaration" . "identifier"

    "identifier"  shift, and go to state 40


State 16

   19 type_decl: "symbolic type declaration" . "identifier"

    "identifier"  shift, and go to state 41


State 17

   13 qualified_name: qualified_name . "." "identifier"
   75 atom: qualified_name . "(" arg_list ")"

    "("  shift, and go to state 42
    "."  shift, and go to state 43


State 18

    9 unit: unit type_decl .

    $default  reduce using rule 9 (unit)


State 19

   11 unit: unit relation_decl .

    $default  reduce using rule 11 (unit)


State 20

    5 unit: unit fact .

    $default  reduce using rule 5 (unit)


State 21

    4 unit: unit rule .

    $default  reduce using rule 4 (unit)


State 22

   59 rule: rule_def .
   60     | rule_def . query_plan

    "plan keyword"  shift, and go to state 44

    $default  reduce using rule 59 (rule)

    query_plan  go to state 45


State 23

   63 rule_def: head . ":-" body "."
   65 head: head . "," atom

    ":-"  shift, and go to state 46
    ","   shift, and go to state 47


State 24

   58 fact: atom . "."
   61 rule: atom . "<=" atom ":-" body "."
   62     | atom . "<=" atom ":-" body "." query_plan
   64 head: atom .

    "."   shift, and go to state 48
    "<="  shift, and go to state 49

    $default  reduce using rule 64 (head)


State 25

    6 unit: unit component_decl .

    $default  reduce using rule 6 (unit)


State 26

  148 component_decl: component_head . "{" component_body "}"
  150 component_head: component_head . ":" component_type
  151               | component_head . "," component_type

    ","  shift, and go to state 50
    ":"  shift, and go to state 51
    "{"  shift, and go to state 52


State 27

    7 unit: unit component_init .

    $default  reduce using rule 7 (unit)


State 28

   10 unit: unit functor_decl .

    $default  reduce using rule 10 (unit)


State 29

    8 unit: unit pragma .

    $default  reduce using rule 8 (unit)


State 30

    3 unit: unit directive_head .

    $default  reduce using rule 3 (unit)


State 31

  177 directive_head: directive_head_decl . directive_list

    "identifier"  shift, and go to state 4

    qualified_name           go to state 53
    directive_list           go to state 54
    relation_directive_list  go to state 55


State 32

  175 pragma: "pragma directive" "symbol" . "symbol"
  176       | "pragma directive" "symbol" .

    "symbol"  shift, and go to state 56

    $default  reduce using rule 176 (pragma)


State 33

   30 relation_names: "identifier" .

    $default  reduce using rule 30 (relation_names)


State 34

   29 relation_decl: "relation declaration" relation_names . attributes_list relation_tags dependency_list
   31 relation_names: relation_names . "," "identifier"

    "("  shift, and go to state 57
    ","  shift, and go to state 58

    attributes_list  go to state 59


State 35

  167 functor_decl: "functor declaration" "identifier" . "(" functor_arg_type_list ")" ":" qualified_name
  168             | "functor declaration" "identifier" . "(" functor_arg_type_list ")" ":" qualified_name "stateful functor"

    "("  shift, and go to state 60


State 36

   14 type_decl: "type declaration" "identifier" . "<:" qualified_name
   15          | "type declaration" "identifier" . "=" union_type_list
   16          | "type declaration" "identifier" . "=" record_type_list
   17          | "type declaration" "identifier" . "=" adt_branch_list
   20          | "type declaration" "identifier" .

    "="   shift, and go to state 61
    "<:"  shift, and go to state 62

    $default  reduce using rule 20 (type_decl)


State 37

  152 component_type: "identifier" . component_type_params

    "<"  shift, and go to state 63

    $default  reduce using rule 153 (component_type_params)

    component_type_params  go to state 64


State 38

  149 component_head: "component declaration" component_type .

    $default  reduce using rule 149 (component_head)


State 39

  166 component_init: "component instantiation" "identifier" . "=" component_type

    "="  shift, and go to state 65


State 40

   18 type_decl: "numeric type declaration" "identifier" .

    $default  reduce using rule 18 (type_decl)


State 41

   19 type_decl: "symbolic type declaration" "identifier" .

    $default  reduce using rule 19 (type_decl)


State 42

   75 atom: qualified_name "(" . arg_list ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    $default  reduce using rule 86 (arg_list)

    arg_list            go to state 96
    non_empty_arg_list  go to state 97
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 43

   13 qualified_name: qualified_name "." . "identifier"

    "identifier"  shift, and go to state 101


State 44

  141 query_plan: "plan keyword" . query_plan_list

    "number"  shift, and go to state 102

    query_plan_list  go to state 103


State 45

   60 rule: rule_def query_plan .

    $default  reduce using rule 60 (rule)


State 46

   63 rule_def: head ":-" . body "."

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    body              go to state 111
    disjunction       go to state 112
    conjunction       go to state 113
    term              go to state 114
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 117
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 47

   65 head: head "," . atom

    "identifier"  shift, and go to state 4

    qualified_name  go to state 17
    atom            go to state 118


State 48

   58 fact: atom "." .

    $default  reduce using rule 58 (fact)


State 49

   61 rule: atom "<=" . atom ":-" body "."
   62     | atom "<=" . atom ":-" body "." query_plan

    "identifier"  shift, and go to state 4

    qualified_name  go to state 17
    atom            go to state 119


State 50

  151 component_head: component_head "," . component_type

    "identifier"  shift, and go to state 37

    component_type  go to state 120


State 51

  150 component_head: component_head ":" . component_type

    "identifier"  shift, and go to state 37

    component_type  go to state 121


State 52

  148 component_decl: component_head "{" . component_body "}"

    $default  reduce using rule 157 (component_body)

    component_body  go to state 122


State 53

   13 qualified_name: qualified_name . "." "identifier"
  185 relation_directive_list: qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 185 (relation_directive_list)


State 54

  177 directive_head: directive_head_decl directive_list .

    $default  reduce using rule 177 (directive_head)


State 55

  182 directive_list: relation_directive_list .
  183               | relation_directive_list . "(" ")"
  184               | relation_directive_list . "(" non_empty_key_value_pairs ")"
  186 relation_directive_list: relation_directive_list . "," qualified_name

    "("  shift, and go to state 123
    ","  shift, and go to state 124

    $default  reduce using rule 182 (directive_list)


State 56

  175 pragma: "pragma directive" "symbol" "symbol" .

    $default  reduce using rule 175 (pragma)


State 57

   32 attributes_list: "(" . ")"
   33                | "(" . non_empty_attributes ")"

    "identifier"  shift, and go to state 125
    ")"           shift, and go to state 126

    non_empty_attributes  go to state 127
    attribute             go to state 128


State 58

   31 relation_names: relation_names "," . "identifier"

    "identifier"  shift, and go to state 129


State 59

   29 relation_decl: "relation declaration" relation_names attributes_list . relation_tags dependency_list

    $default  reduce using rule 37 (relation_tags)

    relation_tags  go to state 130


State 60

  167 functor_decl: "functor declaration" "identifier" "(" . functor_arg_type_list ")" ":" qualified_name
  168             | "functor declaration" "identifier" "(" . functor_arg_type_list ")" ":" qualified_name "stateful functor"

    "identifier"  shift, and go to state 131

    $default  reduce using rule 169 (functor_arg_type_list)

    qualified_name                   go to state 132
    functor_arg_type_list            go to state 133
    non_empty_functor_arg_type_list  go to state 134
    functor_attribute                go to state 135


State 61

   15 type_decl: "type declaration" "identifier" "=" . union_type_list
   16          | "type declaration" "identifier" "=" . record_type_list
   17          | "type declaration" "identifier" "=" . adt_branch_list

    "identifier"  shift, and go to state 136
    "["           shift, and go to state 137

    qualified_name    go to state 138
    record_type_list  go to state 139
    union_type_list   go to state 140
    adt_branch_list   go to state 141
    adt_branch        go to state 142


State 62

   14 type_decl: "type declaration" "identifier" "<:" . qualified_name

    "identifier"  shift, and go to state 4

    qualified_name  go to state 143


State 63

  154 component_type_params: "<" . component_param_list ">"

    "identifier"  shift, and go to state 144

    component_param_list  go to state 145


State 64

  152 component_type: "identifier" component_type_params .

    $default  reduce using rule 152 (component_type)


State 65

  166 component_init: "component instantiation" "identifier" "=" . component_type

    "identifier"  shift, and go to state 37

    component_type  go to state 146


State 66

   90 arg: "symbol" .

    $default  reduce using rule 90 (arg)


State 67

   97 arg: "identifier" .

    $default  reduce using rule 97 (arg)


State 68

   93 arg: "number" .

    $default  reduce using rule 93 (arg)


State 69

   92 arg: "unsigned number" .

    $default  reduce using rule 92 (arg)


State 70

   91 arg: "float" .

    $default  reduce using rule 91 (arg)


State 71

   96 arg: "auto-increment functor" . "(" ")"

    "("  shift, and go to state 147


State 72

  125 functor_built_in: "concatenation of strings" .

    $default  reduce using rule 125 (functor_built_in)


State 73

  126 functor_built_in: "ordinal number of a string" .

    $default  reduce using rule 126 (functor_built_in)


State 74

  127 functor_built_in: "range" .

    $default  reduce using rule 127 (functor_built_in)


State 75

  128 functor_built_in: "length of a string" .

    $default  reduce using rule 128 (functor_built_in)


State 76

  129 functor_built_in: "sub-string of a string" .

    $default  reduce using rule 129 (functor_built_in)


State 77

  136 aggregate_func: "mean aggregator" .

    $default  reduce using rule 136 (aggregate_func)


State 78

  137 aggregate_func: "min aggregator" .

    $default  reduce using rule 137 (aggregate_func)


State 79

  135 aggregate_func: "max aggregator" .

    $default  reduce using rule 135 (aggregate_func)


State 80

  134 aggregate_func: "count aggregator" .

    $default  reduce using rule 134 (aggregate_func)


State 81

  138 aggregate_func: "sum aggregator" .

    $default  reduce using rule 138 (aggregate_func)


State 82

  130 functor_built_in: "convert to float" .

    $default  reduce using rule 130 (functor_built_in)


State 83

  131 functor_built_in: "convert to signed integer" .

    $default  reduce using rule 131 (functor_built_in)


State 84

  132 functor_built_in: "convert to string" .

    $default  reduce using rule 132 (functor_built_in)


State 85

  133 functor_built_in: "convert to unsigned integer" .

    $default  reduce using rule 133 (functor_built_in)


State 86

  102 arg: "type cast" . "(" arg "," qualified_name ")"

    "("  shift, and go to state 148


State 87

  103 arg: "@" . "identifier" "(" arg_list ")"

    "identifier"  shift, and go to state 149


State 88

   98 arg: "nil reference" .

    $default  reduce using rule 98 (arg)


State 89

   99 arg: "[" . arg_list "]"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    $default  reduce using rule 86 (arg_list)

    arg_list            go to state 150
    non_empty_arg_list  go to state 97
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 90

   94 arg: "_" .

    $default  reduce using rule 94 (arg)


State 91

   95 arg: "$" .
  100    | "$" . qualified_name "(" arg_list ")"

    "identifier"  shift, and go to state 4

    $default  reduce using rule 95 (arg)

    qualified_name  go to state 151


State 92

  106 arg: "-" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 152
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 93

  101 arg: "(" . arg ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 153
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 94

  107 arg: "bnot" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 154
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 95

  108 arg: "lnot" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 155
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 96

   75 atom: qualified_name "(" arg_list . ")"

    ")"  shift, and go to state 156


State 97

   87 arg_list: non_empty_arg_list .
   89 non_empty_arg_list: non_empty_arg_list . "," arg

    ","  shift, and go to state 157

    $default  reduce using rule 87 (arg_list)


State 98

   88 non_empty_arg_list: arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 88 (non_empty_arg_list)


State 99

  104 arg: functor_built_in . "(" arg_list ")"

    "("  shift, and go to state 173


State 100

  105 arg: aggregate_func . "(" arg "," non_empty_arg_list ")"
  124    | aggregate_func . arg_list ":" aggregate_body

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 174
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    $default  reduce using rule 86 (arg_list)

    arg_list            go to state 175
    non_empty_arg_list  go to state 97
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 101

   13 qualified_name: qualified_name "." "identifier" .

    $default  reduce using rule 13 (qualified_name)


State 102

  142 query_plan_list: "number" . ":" plan_order

    ":"  shift, and go to state 176


State 103

  141 query_plan: "plan keyword" query_plan_list .
  143 query_plan_list: query_plan_list . "," "number" ":" plan_order

    ","  shift, and go to state 177

    $default  reduce using rule 141 (query_plan)


State 104

   12 qualified_name: "identifier" .
   97 arg: "identifier" .

    "("       reduce using rule 12 (qualified_name)
    "."       reduce using rule 12 (qualified_name)
    $default  reduce using rule 97 (arg)


State 105

   82 constraint: "match predicate" . "(" arg "," arg ")"

    "("  shift, and go to state 178


State 106

   83 constraint: "checks whether substring is contained in a string" . "(" arg "," arg ")"

    "("  shift, and go to state 179


State 107

   84 constraint: "true literal constraint" .

    $default  reduce using rule 84 (constraint)


State 108

   85 constraint: "false literal constraint" .

    $default  reduce using rule 85 (constraint)


State 109

   74 term: "!" . term

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    term              go to state 180
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 117
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 110

   73 term: "(" . disjunction ")"
  101 arg: "(" . arg ")"

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    disjunction       go to state 181
    conjunction       go to state 113
    term              go to state 114
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 182
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 111

   63 rule_def: head ":-" body . "."

    "."  shift, and go to state 183


State 112

   66 body: disjunction .
   68 disjunction: disjunction . ";" conjunction

    ";"  shift, and go to state 184

    $default  reduce using rule 66 (body)


State 113

   67 disjunction: conjunction .
   70 conjunction: conjunction . "," term

    ","  shift, and go to state 185

    $default  reduce using rule 67 (disjunction)


State 114

   69 conjunction: term .

    $default  reduce using rule 69 (conjunction)


State 115

   71 term: atom .

    $default  reduce using rule 71 (term)


State 116

   72 term: constraint .

    $default  reduce using rule 72 (term)


State 117

   76 constraint: arg . "<" arg
   77           | arg . ">" arg
   78           | arg . "<=" arg
   79           | arg . ">=" arg
   80           | arg . "=" arg
   81           | arg . "!=" arg
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "="      shift, and go to state 186
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "<"      shift, and go to state 187
    ">"      shift, and go to state 188
    "<="     shift, and go to state 189
    ">="     shift, and go to state 190
    "!="     shift, and go to state 191
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 118

   65 head: head "," atom .

    $default  reduce using rule 65 (head)


State 119

   61 rule: atom "<=" atom . ":-" body "."
   62     | atom "<=" atom . ":-" body "." query_plan

    ":-"  shift, and go to state 192


State 120

  151 component_head: component_head "," component_type .

    $default  reduce using rule 151 (component_head)


State 121

  150 component_head: component_head ":" component_type .

    $default  reduce using rule 150 (component_head)


State 122

  148 component_decl: component_head "{" component_body . "}"
  158 component_body: component_body . directive_head
  159               | component_body . rule
  160               | component_body . fact
  161               | component_body . "override rules of super-component" "identifier"
  162               | component_body . component_init
  163               | component_body . component_decl
  164               | component_body . type_decl
  165               | component_body . relation_decl

    "identifier"                         shift, and go to state 4
    "relation declaration"               shift, and go to state 6
    "input directives declaration"       shift, and go to state 8
    "output directives declaration"      shift, and go to state 9
    "printsize directives declaration"   shift, and go to state 10
    "limitsize directives declaration"   shift, and go to state 11
    "override rules of super-component"  shift, and go to state 193
    "type declaration"                   shift, and go to state 12
    "component declaration"              shift, and go to state 13
    "component instantiation"            shift, and go to state 14
    "numeric type declaration"           shift, and go to state 15
    "symbolic type declaration"          shift, and go to state 16
    "}"                                  shift, and go to state 194

    qualified_name       go to state 17
    type_decl            go to state 195
    relation_decl        go to state 196
    fact                 go to state 197
    rule                 go to state 198
    rule_def             go to state 22
    head                 go to state 23
    atom                 go to state 24
    component_decl       go to state 199
    component_head       go to state 26
    component_init       go to state 200
    directive_head       go to state 201
    directive_head_decl  go to state 31


State 123

  183 directive_list: relation_directive_list "(" . ")"
  184               | relation_directive_list "(" . non_empty_key_value_pairs ")"

    "identifier"  shift, and go to state 202
    ")"           shift, and go to state 203

    non_empty_key_value_pairs  go to state 204


State 124

  186 relation_directive_list: relation_directive_list "," . qualified_name

    "identifier"  shift, and go to state 4

    qualified_name  go to state 205


State 125

   36 attribute: "identifier" . ":" qualified_name

    ":"  shift, and go to state 206


State 126

   32 attributes_list: "(" ")" .

    $default  reduce using rule 32 (attributes_list)


State 127

   33 attributes_list: "(" non_empty_attributes . ")"
   35 non_empty_attributes: non_empty_attributes . "," attribute

    ")"  shift, and go to state 207
    ","  shift, and go to state 208


State 128

   34 non_empty_attributes: attribute .

    $default  reduce using rule 34 (non_empty_attributes)


State 129

   31 relation_names: relation_names "," "identifier" .

    $default  reduce using rule 31 (relation_names)


State 130

   29 relation_decl: "relation declaration" relation_names attributes_list relation_tags . dependency_list
   38 relation_tags: relation_tags . "relation qualifier overidable"
   39              | relation_tags . "relation qualifier inline"
   40              | relation_tags . "relation qualifier no_inline"
   41              | relation_tags . "relation qualifier magic"
   42              | relation_tags . "relation qualifier no_magic"
   43              | relation_tags . "BRIE datastructure qualifier"
   44              | relation_tags . "BTREE datastructure qualifier"
   45              | relation_tags . "BTREE_DELETE datastructure qualifier"
   46              | relation_tags . "equivalence relation qualifier"
   47              | relation_tags . "relation qualifier output"
   48              | relation_tags . "relation qualifier input"
   49              | relation_tags . "relation qualifier printsize"

    "relation qualifier output"             shift, and go to state 209
    "relation qualifier input"              shift, and go to state 210
    "relation qualifier printsize"          shift, and go to state 211
    "BRIE datastructure qualifier"          shift, and go to state 212
    "BTREE datastructure qualifier"         shift, and go to state 213
    "BTREE_DELETE datastructure qualifier"  shift, and go to state 214
    "equivalence relation qualifier"        shift, and go to state 215
    "relation qualifier overidable"         shift, and go to state 216
    "relation qualifier inline"             shift, and go to state 217
    "relation qualifier no_inline"          shift, and go to state 218
    "relation qualifier magic"              shift, and go to state 219
    "relation qualifier no_magic"           shift, and go to state 220
    "choice-domain"                         shift, and go to state 221

    $default  reduce using rule 56 (dependency_list)

    dependency_list  go to state 222


State 131

   12 qualified_name: "identifier" .
  174 functor_attribute: "identifier" . ":" qualified_name

    ":"  shift, and go to state 223

    $default  reduce using rule 12 (qualified_name)


State 132

   13 qualified_name: qualified_name . "." "identifier"
  173 functor_attribute: qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 173 (functor_attribute)


State 133

  167 functor_decl: "functor declaration" "identifier" "(" functor_arg_type_list . ")" ":" qualified_name
  168             | "functor declaration" "identifier" "(" functor_arg_type_list . ")" ":" qualified_name "stateful functor"

    ")"  shift, and go to state 224


State 134

  170 functor_arg_type_list: non_empty_functor_arg_type_list .
  172 non_empty_functor_arg_type_list: non_empty_functor_arg_type_list . "," functor_attribute

    ","  shift, and go to state 225

    $default  reduce using rule 170 (functor_arg_type_list)


State 135

  171 non_empty_functor_arg_type_list: functor_attribute .

    $default  reduce using rule 171 (non_empty_functor_arg_type_list)


State 136

   12 qualified_name: "identifier" .
   27 adt_branch: "identifier" . "{" "}"
   28           | "identifier" . "{" non_empty_attributes "}"

    "{"  shift, and go to state 226

    $default  reduce using rule 12 (qualified_name)


State 137

   21 record_type_list: "[" . "]"
   22                 | "[" . non_empty_attributes "]"

    "identifier"  shift, and go to state 125
    "]"           shift, and go to state 227

    non_empty_attributes  go to state 228
    attribute             go to state 128


State 138

   13 qualified_name: qualified_name . "." "identifier"
   23 union_type_list: qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 23 (union_type_list)


State 139

   16 type_decl: "type declaration" "identifier" "=" record_type_list .

    $default  reduce using rule 16 (type_decl)


State 140

   15 type_decl: "type declaration" "identifier" "=" union_type_list .
   24 union_type_list: union_type_list . "|" qualified_name

    "|"  shift, and go to state 229

    $default  reduce using rule 15 (type_decl)


State 141

   17 type_decl: "type declaration" "identifier" "=" adt_branch_list .
   26 adt_branch_list: adt_branch_list . "|" adt_branch

    "|"  shift, and go to state 230

    $default  reduce using rule 17 (type_decl)


State 142

   25 adt_branch_list: adt_branch .

    $default  reduce using rule 25 (adt_branch_list)


State 143

   13 qualified_name: qualified_name . "." "identifier"
   14 type_decl: "type declaration" "identifier" "<:" qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 14 (type_decl)


State 144

  155 component_param_list: "identifier" .

    $default  reduce using rule 155 (component_param_list)


State 145

  154 component_type_params: "<" component_param_list . ">"
  156 component_param_list: component_param_list . "," "identifier"

    ","  shift, and go to state 231
    ">"  shift, and go to state 232


State 146

  166 component_init: "component instantiation" "identifier" "=" component_type .

    $default  reduce using rule 166 (component_init)


State 147

   96 arg: "auto-increment functor" "(" . ")"

    ")"  shift, and go to state 233


State 148

  102 arg: "type cast" "(" . arg "," qualified_name ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 234
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 149

  103 arg: "@" "identifier" . "(" arg_list ")"

    "("  shift, and go to state 235


State 150

   99 arg: "[" arg_list . "]"

    "]"  shift, and go to state 236


State 151

   13 qualified_name: qualified_name . "." "identifier"
  100 arg: "$" qualified_name . "(" arg_list ")"

    "("  shift, and go to state 237
    "."  shift, and go to state 43


State 152

  106 arg: "-" arg .
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 106 (arg)


State 153

  101 arg: "(" arg . ")"
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ")"      shift, and go to state 238
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 154

  107 arg: "bnot" arg .
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 107 (arg)


State 155

  108 arg: "lnot" arg .
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 108 (arg)


State 156

   75 atom: qualified_name "(" arg_list ")" .

    $default  reduce using rule 75 (atom)


State 157

   89 non_empty_arg_list: non_empty_arg_list "," . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 239
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 158

  109 arg: arg "+" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 240
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 159

  110 arg: arg "-" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 241
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 160

  111 arg: arg "*" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 242
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 161

  112 arg: arg "/" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 243
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 162

  114 arg: arg "^" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 244
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 163

  113 arg: arg "%" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 245
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 164

  118 arg: arg "band" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 246
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 165

  119 arg: arg "bor" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 247
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 166

  120 arg: arg "bxor" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 248
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 167

  121 arg: arg "bshl" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 249
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 168

  122 arg: arg "bshr" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 250
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 169

  123 arg: arg "bshru" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 251
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 170

  115 arg: arg "land" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 252
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 171

  116 arg: arg "lor" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 253
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 172

  117 arg: arg "lxor" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 254
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 173

  104 arg: functor_built_in "(" . arg_list ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    $default  reduce using rule 86 (arg_list)

    arg_list            go to state 255
    non_empty_arg_list  go to state 97
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 174

  101 arg: "(" . arg ")"
  105    | aggregate_func "(" . arg "," non_empty_arg_list ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 256
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 175

  124 arg: aggregate_func arg_list . ":" aggregate_body

    ":"  shift, and go to state 257


State 176

  142 query_plan_list: "number" ":" . plan_order

    "("  shift, and go to state 258

    plan_order  go to state 259


State 177

  143 query_plan_list: query_plan_list "," . "number" ":" plan_order

    "number"  shift, and go to state 260


State 178

   82 constraint: "match predicate" "(" . arg "," arg ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 261
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 179

   83 constraint: "checks whether substring is contained in a string" "(" . arg "," arg ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 262
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 180

   74 term: "!" term .

    $default  reduce using rule 74 (term)


State 181

   68 disjunction: disjunction . ";" conjunction
   73 term: "(" disjunction . ")"

    ")"  shift, and go to state 263
    ";"  shift, and go to state 184


State 182

   76 constraint: arg . "<" arg
   77           | arg . ">" arg
   78           | arg . "<=" arg
   79           | arg . ">=" arg
   80           | arg . "=" arg
   81           | arg . "!=" arg
  101 arg: "(" arg . ")"
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ")"      shift, and go to state 238
    "="      shift, and go to state 186
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "<"      shift, and go to state 187
    ">"      shift, and go to state 188
    "<="     shift, and go to state 189
    ">="     shift, and go to state 190
    "!="     shift, and go to state 191
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 183

   63 rule_def: head ":-" body "." .

    $default  reduce using rule 63 (rule_def)


State 184

   68 disjunction: disjunction ";" . conjunction

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    conjunction       go to state 264
    term              go to state 114
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 117
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 185

   70 conjunction: conjunction "," . term

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    term              go to state 265
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 117
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 186

   80 constraint: arg "=" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 266
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 187

   76 constraint: arg "<" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 267
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 188

   77 constraint: arg ">" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 268
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 189

   78 constraint: arg "<=" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 269
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 190

   79 constraint: arg ">=" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 270
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 191

   81 constraint: arg "!=" . arg

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 271
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 192

   61 rule: atom "<=" atom ":-" . body "."
   62     | atom "<=" atom ":-" . body "." query_plan

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    body              go to state 272
    disjunction       go to state 112
    conjunction       go to state 113
    term              go to state 114
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 117
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 193

  161 component_body: component_body "override rules of super-component" . "identifier"

    "identifier"  shift, and go to state 273


State 194

  148 component_decl: component_head "{" component_body "}" .

    $default  reduce using rule 148 (component_decl)


State 195

  164 component_body: component_body type_decl .

    $default  reduce using rule 164 (component_body)


State 196

  165 component_body: component_body relation_decl .

    $default  reduce using rule 165 (component_body)


State 197

  160 component_body: component_body fact .

    $default  reduce using rule 160 (component_body)


State 198

  159 component_body: component_body rule .

    $default  reduce using rule 159 (component_body)


State 199

  163 component_body: component_body component_decl .

    $default  reduce using rule 163 (component_body)


State 200

  162 component_body: component_body component_init .

    $default  reduce using rule 162 (component_body)


State 201

  158 component_body: component_body directive_head .

    $default  reduce using rule 158 (component_body)


State 202

  187 non_empty_key_value_pairs: "identifier" . "=" kvp_value

    "="  shift, and go to state 274


State 203

  183 directive_list: relation_directive_list "(" ")" .

    $default  reduce using rule 183 (directive_list)


State 204

  184 directive_list: relation_directive_list "(" non_empty_key_value_pairs . ")"
  188 non_empty_key_value_pairs: non_empty_key_value_pairs . "," "identifier" "=" kvp_value

    ")"  shift, and go to state 275
    ","  shift, and go to state 276


State 205

   13 qualified_name: qualified_name . "." "identifier"
  186 relation_directive_list: relation_directive_list "," qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 186 (relation_directive_list)


State 206

   36 attribute: "identifier" ":" . qualified_name

    "identifier"  shift, and go to state 4

    qualified_name  go to state 277


State 207

   33 attributes_list: "(" non_empty_attributes ")" .

    $default  reduce using rule 33 (attributes_list)


State 208

   35 non_empty_attributes: non_empty_attributes "," . attribute

    "identifier"  shift, and go to state 125

    attribute  go to state 278


State 209

   47 relation_tags: relation_tags "relation qualifier output" .

    $default  reduce using rule 47 (relation_tags)


State 210

   48 relation_tags: relation_tags "relation qualifier input" .

    $default  reduce using rule 48 (relation_tags)


State 211

   49 relation_tags: relation_tags "relation qualifier printsize" .

    $default  reduce using rule 49 (relation_tags)


State 212

   43 relation_tags: relation_tags "BRIE datastructure qualifier" .

    $default  reduce using rule 43 (relation_tags)


State 213

   44 relation_tags: relation_tags "BTREE datastructure qualifier" .

    $default  reduce using rule 44 (relation_tags)


State 214

   45 relation_tags: relation_tags "BTREE_DELETE datastructure qualifier" .

    $default  reduce using rule 45 (relation_tags)


State 215

   46 relation_tags: relation_tags "equivalence relation qualifier" .

    $default  reduce using rule 46 (relation_tags)


State 216

   38 relation_tags: relation_tags "relation qualifier overidable" .

    $default  reduce using rule 38 (relation_tags)


State 217

   39 relation_tags: relation_tags "relation qualifier inline" .

    $default  reduce using rule 39 (relation_tags)


State 218

   40 relation_tags: relation_tags "relation qualifier no_inline" .

    $default  reduce using rule 40 (relation_tags)


State 219

   41 relation_tags: relation_tags "relation qualifier magic" .

    $default  reduce using rule 41 (relation_tags)


State 220

   42 relation_tags: relation_tags "relation qualifier no_magic" .

    $default  reduce using rule 42 (relation_tags)


State 221

   57 dependency_list: "choice-domain" . dependency_list_aux

    "identifier"  shift, and go to state 279
    "("           shift, and go to state 280

    dependency           go to state 281
    dependency_list_aux  go to state 282


State 222

   29 relation_decl: "relation declaration" relation_names attributes_list relation_tags dependency_list .

    $default  reduce using rule 29 (relation_decl)


State 223

  174 functor_attribute: "identifier" ":" . qualified_name

    "identifier"  shift, and go to state 4

    qualified_name  go to state 283


State 224

  167 functor_decl: "functor declaration" "identifier" "(" functor_arg_type_list ")" . ":" qualified_name
  168             | "functor declaration" "identifier" "(" functor_arg_type_list ")" . ":" qualified_name "stateful functor"

    ":"  shift, and go to state 284


State 225

  172 non_empty_functor_arg_type_list: non_empty_functor_arg_type_list "," . functor_attribute

    "identifier"  shift, and go to state 131

    qualified_name     go to state 132
    functor_attribute  go to state 285


State 226

   27 adt_branch: "identifier" "{" . "}"
   28           | "identifier" "{" . non_empty_attributes "}"

    "identifier"  shift, and go to state 125
    "}"           shift, and go to state 286

    non_empty_attributes  go to state 287
    attribute             go to state 128


State 227

   21 record_type_list: "[" "]" .

    $default  reduce using rule 21 (record_type_list)


State 228

   22 record_type_list: "[" non_empty_attributes . "]"
   35 non_empty_attributes: non_empty_attributes . "," attribute

    "]"  shift, and go to state 288
    ","  shift, and go to state 208


State 229

   24 union_type_list: union_type_list "|" . qualified_name

    "identifier"  shift, and go to state 4

    qualified_name  go to state 289


State 230

   26 adt_branch_list: adt_branch_list "|" . adt_branch

    "identifier"  shift, and go to state 290

    adt_branch  go to state 291


State 231

  156 component_param_list: component_param_list "," . "identifier"

    "identifier"  shift, and go to state 292


State 232

  154 component_type_params: "<" component_param_list ">" .

    $default  reduce using rule 154 (component_type_params)


State 233

   96 arg: "auto-increment functor" "(" ")" .

    $default  reduce using rule 96 (arg)


State 234

  102 arg: "type cast" "(" arg . "," qualified_name ")"
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ","      shift, and go to state 293
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 235

  103 arg: "@" "identifier" "(" . arg_list ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    $default  reduce using rule 86 (arg_list)

    arg_list            go to state 294
    non_empty_arg_list  go to state 97
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 236

   99 arg: "[" arg_list "]" .

    $default  reduce using rule 99 (arg)


State 237

  100 arg: "$" qualified_name "(" . arg_list ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    $default  reduce using rule 86 (arg_list)

    arg_list            go to state 295
    non_empty_arg_list  go to state 97
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 238

  101 arg: "(" arg ")" .

    $default  reduce using rule 101 (arg)


State 239

   89 non_empty_arg_list: non_empty_arg_list "," arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 89 (non_empty_arg_list)


State 240

  109 arg: arg . "+" arg
  109    | arg "+" arg .
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "*"  shift, and go to state 160
    "/"  shift, and go to state 161
    "^"  shift, and go to state 162
    "%"  shift, and go to state 163

    $default  reduce using rule 109 (arg)


State 241

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  110    | arg "-" arg .
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "*"  shift, and go to state 160
    "/"  shift, and go to state 161
    "^"  shift, and go to state 162
    "%"  shift, and go to state 163

    $default  reduce using rule 110 (arg)


State 242

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  111    | arg "*" arg .
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 111 (arg)


State 243

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  112    | arg "/" arg .
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 112 (arg)


State 244

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  114    | arg "^" arg .
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 114 (arg)


State 245

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  113    | arg "%" arg .
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "^"  shift, and go to state 162

    $default  reduce using rule 113 (arg)


State 246

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  118    | arg "band" arg .
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169

    $default  reduce using rule 118 (arg)


State 247

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  119    | arg "bor" arg .
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169

    $default  reduce using rule 119 (arg)


State 248

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  120    | arg "bxor" arg .
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169

    $default  reduce using rule 120 (arg)


State 249

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  121    | arg "bshl" arg .
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"  shift, and go to state 158
    "-"  shift, and go to state 159
    "*"  shift, and go to state 160
    "/"  shift, and go to state 161
    "^"  shift, and go to state 162
    "%"  shift, and go to state 163

    $default  reduce using rule 121 (arg)


State 250

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  122    | arg "bshr" arg .
  123    | arg . "bshru" arg

    "+"  shift, and go to state 158
    "-"  shift, and go to state 159
    "*"  shift, and go to state 160
    "/"  shift, and go to state 161
    "^"  shift, and go to state 162
    "%"  shift, and go to state 163

    $default  reduce using rule 122 (arg)


State 251

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg
  123    | arg "bshru" arg .

    "+"  shift, and go to state 158
    "-"  shift, and go to state 159
    "*"  shift, and go to state 160
    "/"  shift, and go to state 161
    "^"  shift, and go to state 162
    "%"  shift, and go to state 163

    $default  reduce using rule 123 (arg)


State 252

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  115    | arg "land" arg .
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169

    $default  reduce using rule 115 (arg)


State 253

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  116    | arg "lor" arg .
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lxor"   shift, and go to state 172

    $default  reduce using rule 116 (arg)


State 254

  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  117    | arg "lxor" arg .
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170

    $default  reduce using rule 117 (arg)


State 255

  104 arg: functor_built_in "(" arg_list . ")"

    ")"  shift, and go to state 296


State 256

  101 arg: "(" arg . ")"
  105    | aggregate_func "(" arg . "," non_empty_arg_list ")"
  109    | arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ")"      shift, and go to state 238
    ","      shift, and go to state 297
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 257

  124 arg: aggregate_func arg_list ":" . aggregate_body

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 298

    qualified_name  go to state 17
    atom            go to state 299
    aggregate_body  go to state 300


State 258

  144 plan_order: "(" . ")"
  145           | "(" . non_empty_plan_order_list ")"

    "number"  shift, and go to state 301
    ")"       shift, and go to state 302

    non_empty_plan_order_list  go to state 303


State 259

  142 query_plan_list: "number" ":" plan_order .

    $default  reduce using rule 142 (query_plan_list)


State 260

  143 query_plan_list: query_plan_list "," "number" . ":" plan_order

    ":"  shift, and go to state 304


State 261

   82 constraint: "match predicate" "(" arg . "," arg ")"
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ","      shift, and go to state 305
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 262

   83 constraint: "checks whether substring is contained in a string" "(" arg . "," arg ")"
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ","      shift, and go to state 306
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 263

   73 term: "(" disjunction ")" .

    $default  reduce using rule 73 (term)


State 264

   68 disjunction: disjunction ";" conjunction .
   70 conjunction: conjunction . "," term

    ","  shift, and go to state 185

    $default  reduce using rule 68 (disjunction)


State 265

   70 conjunction: conjunction "," term .

    $default  reduce using rule 70 (conjunction)


State 266

   80 constraint: arg "=" arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 80 (constraint)


State 267

   76 constraint: arg "<" arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 76 (constraint)


State 268

   77 constraint: arg ">" arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 77 (constraint)


State 269

   78 constraint: arg "<=" arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 78 (constraint)


State 270

   79 constraint: arg ">=" arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 79 (constraint)


State 271

   81 constraint: arg "!=" arg .
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172

    $default  reduce using rule 81 (constraint)


State 272

   61 rule: atom "<=" atom ":-" body . "."
   62     | atom "<=" atom ":-" body . "." query_plan

    "."  shift, and go to state 307


State 273

  161 component_body: component_body "override rules of super-component" "identifier" .

    $default  reduce using rule 161 (component_body)


State 274

  187 non_empty_key_value_pairs: "identifier" "=" . kvp_value

    "symbol"                    shift, and go to state 308
    "identifier"                shift, and go to state 309
    "number"                    shift, and go to state 310
    "true literal constraint"   shift, and go to state 311
    "false literal constraint"  shift, and go to state 312

    kvp_value  go to state 313


State 275

  184 directive_list: relation_directive_list "(" non_empty_key_value_pairs ")" .

    $default  reduce using rule 184 (directive_list)


State 276

  188 non_empty_key_value_pairs: non_empty_key_value_pairs "," . "identifier" "=" kvp_value

    "identifier"  shift, and go to state 314


State 277

   13 qualified_name: qualified_name . "." "identifier"
   36 attribute: "identifier" ":" qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 36 (attribute)


State 278

   35 non_empty_attributes: non_empty_attributes "," attribute .

    $default  reduce using rule 35 (non_empty_attributes)


State 279

   52 dependency: "identifier" .

    $default  reduce using rule 52 (dependency)


State 280

   53 dependency: "(" . non_empty_attribute_names ")"

    "identifier"  shift, and go to state 315

    non_empty_attribute_names  go to state 316


State 281

   54 dependency_list_aux: dependency .

    $default  reduce using rule 54 (dependency_list_aux)


State 282

   55 dependency_list_aux: dependency_list_aux . "," dependency
   57 dependency_list: "choice-domain" dependency_list_aux .

    ","  shift, and go to state 317

    $default  reduce using rule 57 (dependency_list)


State 283

   13 qualified_name: qualified_name . "." "identifier"
  174 functor_attribute: "identifier" ":" qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 174 (functor_attribute)


State 284

  167 functor_decl: "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" . qualified_name
  168             | "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" . qualified_name "stateful functor"

    "identifier"  shift, and go to state 4

    qualified_name  go to state 318


State 285

  172 non_empty_functor_arg_type_list: non_empty_functor_arg_type_list "," functor_attribute .

    $default  reduce using rule 172 (non_empty_functor_arg_type_list)


State 286

   27 adt_branch: "identifier" "{" "}" .

    $default  reduce using rule 27 (adt_branch)


State 287

   28 adt_branch: "identifier" "{" non_empty_attributes . "}"
   35 non_empty_attributes: non_empty_attributes . "," attribute

    ","  shift, and go to state 208
    "}"  shift, and go to state 319


State 288

   22 record_type_list: "[" non_empty_attributes "]" .

    $default  reduce using rule 22 (record_type_list)


State 289

   13 qualified_name: qualified_name . "." "identifier"
   24 union_type_list: union_type_list "|" qualified_name .

    "."  shift, and go to state 43

    $default  reduce using rule 24 (union_type_list)


State 290

   27 adt_branch: "identifier" . "{" "}"
   28           | "identifier" . "{" non_empty_attributes "}"

    "{"  shift, and go to state 226


State 291

   26 adt_branch_list: adt_branch_list "|" adt_branch .

    $default  reduce using rule 26 (adt_branch_list)


State 292

  156 component_param_list: component_param_list "," "identifier" .

    $default  reduce using rule 156 (component_param_list)


State 293

  102 arg: "type cast" "(" arg "," . qualified_name ")"

    "identifier"  shift, and go to state 4

    qualified_name  go to state 320


State 294

  103 arg: "@" "identifier" "(" arg_list . ")"

    ")"  shift, and go to state 321


State 295

  100 arg: "$" qualified_name "(" arg_list . ")"

    ")"  shift, and go to state 322


State 296

  104 arg: functor_built_in "(" arg_list ")" .

    $default  reduce using rule 104 (arg)


State 297

  105 arg: aggregate_func "(" arg "," . non_empty_arg_list ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    non_empty_arg_list  go to state 323
    arg                 go to state 98
    functor_built_in    go to state 99
    aggregate_func      go to state 100


State 298

  139 aggregate_body: "{" . body "}"

    "symbol"                                             shift, and go to state 66
    "identifier"                                         shift, and go to state 104
    "number"                                             shift, and go to state 68
    "unsigned number"                                    shift, and go to state 69
    "float"                                              shift, and go to state 70
    "auto-increment functor"                             shift, and go to state 71
    "match predicate"                                    shift, and go to state 105
    "checks whether substring is contained in a string"  shift, and go to state 106
    "concatenation of strings"                           shift, and go to state 72
    "ordinal number of a string"                         shift, and go to state 73
    "range"                                              shift, and go to state 74
    "length of a string"                                 shift, and go to state 75
    "sub-string of a string"                             shift, and go to state 76
    "mean aggregator"                                    shift, and go to state 77
    "min aggregator"                                     shift, and go to state 78
    "max aggregator"                                     shift, and go to state 79
    "count aggregator"                                   shift, and go to state 80
    "sum aggregator"                                     shift, and go to state 81
    "true literal constraint"                            shift, and go to state 107
    "false literal constraint"                           shift, and go to state 108
    "convert to float"                                   shift, and go to state 82
    "convert to signed integer"                          shift, and go to state 83
    "convert to string"                                  shift, and go to state 84
    "convert to unsigned integer"                        shift, and go to state 85
    "type cast"                                          shift, and go to state 86
    "@"                                                  shift, and go to state 87
    "nil reference"                                      shift, and go to state 88
    "["                                                  shift, and go to state 89
    "_"                                                  shift, and go to state 90
    "$"                                                  shift, and go to state 91
    "-"                                                  shift, and go to state 92
    "!"                                                  shift, and go to state 109
    "("                                                  shift, and go to state 110
    "bnot"                                               shift, and go to state 94
    "lnot"                                               shift, and go to state 95

    qualified_name    go to state 17
    body              go to state 324
    disjunction       go to state 112
    conjunction       go to state 113
    term              go to state 114
    atom              go to state 115
    constraint        go to state 116
    arg               go to state 117
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 299

  140 aggregate_body: atom .

    $default  reduce using rule 140 (aggregate_body)


State 300

  124 arg: aggregate_func arg_list ":" aggregate_body .

    $default  reduce using rule 124 (arg)


State 301

  146 non_empty_plan_order_list: "number" .

    $default  reduce using rule 146 (non_empty_plan_order_list)


State 302

  144 plan_order: "(" ")" .

    $default  reduce using rule 144 (plan_order)


State 303

  145 plan_order: "(" non_empty_plan_order_list . ")"
  147 non_empty_plan_order_list: non_empty_plan_order_list . "," "number"

    ")"  shift, and go to state 325
    ","  shift, and go to state 326


State 304

  143 query_plan_list: query_plan_list "," "number" ":" . plan_order

    "("  shift, and go to state 258

    plan_order  go to state 327


State 305

   82 constraint: "match predicate" "(" arg "," . arg ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 328
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 306

   83 constraint: "checks whether substring is contained in a string" "(" arg "," . arg ")"

    "symbol"                       shift, and go to state 66
    "identifier"                   shift, and go to state 67
    "number"                       shift, and go to state 68
    "unsigned number"              shift, and go to state 69
    "float"                        shift, and go to state 70
    "auto-increment functor"       shift, and go to state 71
    "concatenation of strings"     shift, and go to state 72
    "ordinal number of a string"   shift, and go to state 73
    "range"                        shift, and go to state 74
    "length of a string"           shift, and go to state 75
    "sub-string of a string"       shift, and go to state 76
    "mean aggregator"              shift, and go to state 77
    "min aggregator"               shift, and go to state 78
    "max aggregator"               shift, and go to state 79
    "count aggregator"             shift, and go to state 80
    "sum aggregator"               shift, and go to state 81
    "convert to float"             shift, and go to state 82
    "convert to signed integer"    shift, and go to state 83
    "convert to string"            shift, and go to state 84
    "convert to unsigned integer"  shift, and go to state 85
    "type cast"                    shift, and go to state 86
    "@"                            shift, and go to state 87
    "nil reference"                shift, and go to state 88
    "["                            shift, and go to state 89
    "_"                            shift, and go to state 90
    "$"                            shift, and go to state 91
    "-"                            shift, and go to state 92
    "("                            shift, and go to state 93
    "bnot"                         shift, and go to state 94
    "lnot"                         shift, and go to state 95

    arg               go to state 329
    functor_built_in  go to state 99
    aggregate_func    go to state 100


State 307

   61 rule: atom "<=" atom ":-" body "." .
   62     | atom "<=" atom ":-" body "." . query_plan

    "plan keyword"  shift, and go to state 44

    $default  reduce using rule 61 (rule)

    query_plan  go to state 330


State 308

  189 kvp_value: "symbol" .

    $default  reduce using rule 189 (kvp_value)


State 309

  190 kvp_value: "identifier" .

    $default  reduce using rule 190 (kvp_value)


State 310

  191 kvp_value: "number" .

    $default  reduce using rule 191 (kvp_value)


State 311

  192 kvp_value: "true literal constraint" .

    $default  reduce using rule 192 (kvp_value)


State 312

  193 kvp_value: "false literal constraint" .

    $default  reduce using rule 193 (kvp_value)


State 313

  187 non_empty_key_value_pairs: "identifier" "=" kvp_value .

    $default  reduce using rule 187 (non_empty_key_value_pairs)


State 314

  188 non_empty_key_value_pairs: non_empty_key_value_pairs "," "identifier" . "=" kvp_value

    "="  shift, and go to state 331


State 315

   50 non_empty_attribute_names: "identifier" .

    $default  reduce using rule 50 (non_empty_attribute_names)


State 316

   51 non_empty_attribute_names: non_empty_attribute_names . "," "identifier"
   53 dependency: "(" non_empty_attribute_names . ")"

    ")"  shift, and go to state 332
    ","  shift, and go to state 333


State 317

   55 dependency_list_aux: dependency_list_aux "," . dependency

    "identifier"  shift, and go to state 279
    "("           shift, and go to state 280

    dependency  go to state 334


State 318

   13 qualified_name: qualified_name . "." "identifier"
  167 functor_decl: "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" qualified_name .
  168             | "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" qualified_name . "stateful functor"

    "stateful functor"  shift, and go to state 335
    "."                 shift, and go to state 43

    $default  reduce using rule 167 (functor_decl)


State 319

   28 adt_branch: "identifier" "{" non_empty_attributes "}" .

    $default  reduce using rule 28 (adt_branch)


State 320

   13 qualified_name: qualified_name . "." "identifier"
  102 arg: "type cast" "(" arg "," qualified_name . ")"

    ")"  shift, and go to state 336
    "."  shift, and go to state 43


State 321

  103 arg: "@" "identifier" "(" arg_list ")" .

    $default  reduce using rule 103 (arg)


State 322

  100 arg: "$" qualified_name "(" arg_list ")" .

    $default  reduce using rule 100 (arg)


State 323

   89 non_empty_arg_list: non_empty_arg_list . "," arg
  105 arg: aggregate_func "(" arg "," non_empty_arg_list . ")"

    ")"  shift, and go to state 337
    ","  shift, and go to state 157


State 324

  139 aggregate_body: "{" body . "}"

    "}"  shift, and go to state 338


State 325

  145 plan_order: "(" non_empty_plan_order_list ")" .

    $default  reduce using rule 145 (plan_order)


State 326

  147 non_empty_plan_order_list: non_empty_plan_order_list "," . "number"

    "number"  shift, and go to state 339


State 327

  143 query_plan_list: query_plan_list "," "number" ":" plan_order .

    $default  reduce using rule 143 (query_plan_list)


State 328

   82 constraint: "match predicate" "(" arg "," arg . ")"
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ")"      shift, and go to state 340
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 329

   83 constraint: "checks whether substring is contained in a string" "(" arg "," arg . ")"
  109 arg: arg . "+" arg
  110    | arg . "-" arg
  111    | arg . "*" arg
  112    | arg . "/" arg
  113    | arg . "%" arg
  114    | arg . "^" arg
  115    | arg . "land" arg
  116    | arg . "lor" arg
  117    | arg . "lxor" arg
  118    | arg . "band" arg
  119    | arg . "bor" arg
  120    | arg . "bxor" arg
  121    | arg . "bshl" arg
  122    | arg . "bshr" arg
  123    | arg . "bshru" arg

    "+"      shift, and go to state 158
    "-"      shift, and go to state 159
    ")"      shift, and go to state 341
    "*"      shift, and go to state 160
    "/"      shift, and go to state 161
    "^"      shift, and go to state 162
    "%"      shift, and go to state 163
    "band"   shift, and go to state 164
    "bor"    shift, and go to state 165
    "bxor"   shift, and go to state 166
    "bshl"   shift, and go to state 167
    "bshr"   shift, and go to state 168
    "bshru"  shift, and go to state 169
    "land"   shift, and go to state 170
    "lor"    shift, and go to state 171
    "lxor"   shift, and go to state 172


State 330

   62 rule: atom "<=" atom ":-" body "." query_plan .

    $default  reduce using rule 62 (rule)


State 331

  188 non_empty_key_value_pairs: non_empty_key_value_pairs "," "identifier" "=" . kvp_value

    "symbol"                    shift, and go to state 308
    "identifier"                shift, and go to state 309
    "number"                    shift, and go to state 310
    "true literal constraint"   shift, and go to state 311
    "false literal constraint"  shift, and go to state 312

    kvp_value  go to state 342


State 332

   53 dependency: "(" non_empty_attribute_names ")" .

    $default  reduce using rule 53 (dependency)


State 333

   51 non_empty_attribute_names: non_empty_attribute_names "," . "identifier"

    "identifier"  shift, and go to state 343


State 334

   55 dependency_list_aux: dependency_list_aux "," dependency .

    $default  reduce using rule 55 (dependency_list_aux)


State 335

  168 functor_decl: "functor declaration" "identifier" "(" functor_arg_type_list ")" ":" qualified_name "stateful functor" .

    $default  reduce using rule 168 (functor_decl)


State 336

  102 arg: "type cast" "(" arg "," qualified_name ")" .

    $default  reduce using rule 102 (arg)


State 337

  105 arg: aggregate_func "(" arg "," non_empty_arg_list ")" .

    $default  reduce using rule 105 (arg)


State 338

  139 aggregate_body: "{" body "}" .

    $default  reduce using rule 139 (aggregate_body)


State 339

  147 non_empty_plan_order_list: non_empty_plan_order_list "," "number" .

    $default  reduce using rule 147 (non_empty_plan_order_list)


State 340

   82 constraint: "match predicate" "(" arg "," arg ")" .

    $default  reduce using rule 82 (constraint)


State 341

   83 constraint: "checks whether substring is contained in a string" "(" arg "," arg ")" .

    $default  reduce using rule 83 (constraint)


State 342

  188 non_empty_key_value_pairs: non_empty_key_value_pairs "," "identifier" "=" kvp_value .

    $default  reduce using rule 188 (non_empty_key_value_pairs)


State 343

   51 non_empty_attribute_names: non_empty_attribute_names "," "identifier" .

    $default  reduce using rule 51 (non_empty_attribute_names)

.type V

.decl Rule(n: number)
.input Rule

.decl exports(v0: V, v1: V)
.input exports

.decl dealswith(v0: V, v1: V)
.input dealswith

.decl hascurrency(v0: V, v1: V)
.input hascurrency

.decl imports(v0: V, v1: V)
.input imports

.decl Ihasofficiallanguage(v0: V, v1: V)
.input Ihasofficiallanguage

.decl inv_0(v0: V, v1: V)
.output inv_0

.decl hasofficiallanguage(v0: V, v1: V)
.output hasofficiallanguage

hasofficiallanguage(v0, v1) :- dealswith(v2, v1), Ihasofficiallanguage(v2, v0), Rule(408).
hasofficiallanguage(v0, v1) :- dealswith(v1, v2), Ihasofficiallanguage(v2, v0), Rule(403).
hasofficiallanguage(v0, v1) :- dealswith(v2, v0), Ihasofficiallanguage(v2, v1), Rule(405).
hasofficiallanguage(v0, v1) :- imports(v0, v2), hasofficiallanguage(v1, v2), Rule(538).
hasofficiallanguage(v0, v1) :- exports(v2, v1), Ihasofficiallanguage(v2, v0), Rule(336).
hasofficiallanguage(v0, v1) :- dealswith(v0, v2), hasofficiallanguage(v1, v2), Rule(430).
hasofficiallanguage(v0, v1) :- imports(v2, v1), Ihasofficiallanguage(v2, v0), Rule(516).
hasofficiallanguage(v0, v1) :- dealswith(v2, v0), hasofficiallanguage(v1, v2), Rule(428).
hasofficiallanguage(v0, v1) :- dealswith(v0, v2), Ihasofficiallanguage(v2, v1), Rule(407).
hasofficiallanguage(v0, v1) :- exports(v0, v2), hasofficiallanguage(v1, v2), Rule(358).
